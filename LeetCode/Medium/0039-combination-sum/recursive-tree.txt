Issum(0, 7, [])                            // candidate = 2
├─ pick 2  → Issum(0, 5, [2])
│   ├─ pick 2  → Issum(0, 3, [2,2])
│   │   ├─ pick 2  → Issum(0, 1, [2,2,2])   // 1 < 2, cannot pick 2
│   │   │   └─ skip 2 → Issum(1, 1, [2,2,2])  // idx 1, candidate 3
│   │   │       └─ skip 3 → Issum(2, 1, [2,2,2]) // idx 2, candidate 6
│   │   │           └─ skip 6 → Issum(3, 1, [2,2,2]) // idx 3, candidate 7
│   │   │               └─ skip 7 → Issum(4, 1, [2,2,2]) // ind==arr.length → dead end
│   │   └─ skip 2 → Issum(1, 3, [2,2])
│   │       ├─ pick 3 → Issum(1, 0, [2,2,3]) ✔  add [2,2,3]
│   │       └─ skip 3 → Issum(2, 3, [2,2])
│   │           └─ skip 6 / 7 … dead end
│   └─ skip 2 → Issum(1, 5, [2])
│       ├─ pick 3 → Issum(1, 2, [2,3])
│       │   └─ skip 3 / others … dead end
│       └─ skip 3 → Issum(2, 5, [2])
│           └─ skip 6 / 7 … dead end
└─ skip 2 → Issum(1, 7, [])
    ├─ pick 3 → Issum(1, 4, [3])
    │   ├─ pick 3 → Issum(1, 1, [3,3])      // 1 < 3, cannot pick
    │   │   └─ skip 3 / 6 / 7 … dead end
    │   └─ skip 3 → Issum(2, 4, [3])
    │       └─ skip 6 / 7 … dead end
    └─ skip 3 → Issum(2, 7, [])              // candidate = 6
        ├─ pick 6 → Issum(2, 1, [6])         // 1 < 6, cannot pick
        │   └─ skip 6 / 7 … dead end
        └─ skip 6 → Issum(3, 7, [])          // candidate = 7
            ├─ pick 7 → Issum(3, 0, [7]) ✔  add [7]
            └─ skip 7 → Issum(4, 7, [])      // dead end
